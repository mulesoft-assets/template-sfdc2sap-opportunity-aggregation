<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">MS Dynamics to Salesforce account Broadcast</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
This template sets an online migration of accounts from MS Dynamics to Salesforce.
Every time there is a new account or a change in an already existing one, the integration polls for changes from the MS Dynamics source instance and it is responsible for updating the account in Salesforce target instance.

Requirements have been set not only to be used as examples, but also to establish a starting point to adapt your integration to your requirements.

As implemented, this template leverages the batch module.
The batch job is divided in *Process* and *On Complete* stages.
The integration is triggered by a Scheduler defined in the flow that is going to trigger the application, querying newest MS Dynamics updates or creations matching a filter criteria and executing the batch job.
During the *Process* stage, each MS Dynamics account is filtered depending on if it has an existing matching account in Salesforce.
The last step of the *Process* stage groups the accounts and creates or updates them in Salesforce.

Finally during the *On Complete* stage, the template logs output statistics data to the console.
		</section>		
		<section id="considerations">
<![CDATA[
To make this template run, there are certain preconditions that must be considered. All of them deal with the preparations in both source and destination systems, that must be made in order for all to run smoothly. Failing to do so could lead to unexpected behavior of the template.

The business logic supports custom mapping for the industry attribute of accounts:

1. Agriculture and Non-petrol Natural Resource Extraction
2. Consulting
3. Doctor's Offices and Clinics
4. Entertainment Retail 
5. Financial
 
**Note:** You need to install the Java Cryptography Extensions to be able to connect to MS Dynamics. Choose a relevant version according to your Java installation.
 
]]>
		</section>		
		<section id="application_configuration">
		<![CDATA[
**Batch Aggregator Configuration**
+ page.size `200`

**Scheduler Configuration**
+ scheduler.frequency `10000`
+ scheduler.start.delay `100`

**Watermarking default last query timestamp for example 2018-12-13T03:00:59Z**
+ watermark.default.expression `2018-04-01T19:40:27Z`

**MS Dynamics Connector Configuration**
+ msdyn.user `msdyn_user`
+ msdyn.password `msdyn_password`
+ msdyn.url `https://{your MS Dynamics URL}`
+ msdyn.retries `5`

**Salesforce Connector Configuration**
+ sfdc.username `joan.baez@orgb`
+ sfdc.password `JoanBaez456`
+ sfdc.securityToken `ces56arl7apQs56XTddf34X`

]]>
		</section>
		<section id="api_calls">
		<![CDATA[
Salesforce imposes limits on the number of API calls that can be made. Therefore calculating this amount is important. The template calls to the API can be calculated using the formula:

***1 + X + X / ${page.size}***

***X*** is the number of accounts to be synchronized on each run. 

Divide by ***${page.size}*** because by default, accounts are gathered in groups of ${page.size} for each upsert API call in the commit step.	

For instance if 10 records are fetched from an origin instance, then 12 API calls are made (1 + 10 + 1).
]]>
		</section>
		<section id="default_business_logic_xml">
		<![CDATA[
This file holds the functional aspect of the template, directed by a flow responsible of conducting the business logic.

The functional aspect of this template is implemented in this XML, directed by a flow that polls for MS Dynamics creations and updates.

Several message processors constitute four high level actions that fully implement the logic of this template:

1. The template queries for all the existing accounts from MS Dynamics modified after the watermark.
2. During the *Process* stage, each account is filtered depending on if it has an existing matching account in Salesforce.
3. The last step of the *Process* stage, groups the accounts and creates or updates them in Salesforce.
4. During the *On Complete* stage, the template logs output statistics data into the console.
]]>
		</section>
		<section id="default_endpoints_xml">
		<![CDATA[
This file is formed by a flow containing the Scheduler that periodically queries MS Dynamics for updated or created accounts that meet the defined criteria in the query. Then it executes the batch job process that the query results follow.
]]>
		</section>
	</sections>
</configuration>
